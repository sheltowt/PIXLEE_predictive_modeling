2 + 2
log(100)
x <- 2+2
x^2
41 %% 21
42 %% 21
top.5.salaries <- edit(top.5.salaries)
salary <- c(5000, 5000, 5000, 5000, 5000)
position <- c("QB", "QB", "DE", "QB", "QB")
team <- c("Colts", "Patriots", "Panthers", "Bengals", "Giants")
top.5.salaries <- data.frame(salary, position, team)
top.5.salaries
top.5.salaries <- edit(top.5.salaries)
top.5.salaries
save(top.5.salaries, file="C:/Users/williamshelton/Documents/top.5.salaries.rda")
save(top.5.salaries, file="/Users/williamshelton/Documents/top.5.salaries.rda")
load("~/top.5.salaries")
load("/Users/williamshelton/Documents/top.5.salaries")
load("/Users/williamshelton/Documents/top.5.salaries.rda")
data <- read.csv(file="Users/williamshelton/Documents/TSPData/santa_cities.csv")
data <- read.csv(file="williamshelton/Documents/TSPData/santa_cities.csv")
data <- read.csv(file="Documents/TSPData/santa_cities.csv")
tsp <- TSP(data)
library("TSP")
tsp <- TSP(data)
tsp <- ATSP(data)
tsp <- as.TSP(data)
TSP(x, labels=NULL)
TSP(data, labels=NULL)
tsp <- data
data("data")
data1 <- read.csv(file="Documents/TSPData/santa_cities.csv")
library("TSP")
tsp <- TSP(data1)
install.packages("RODBC")
% wget http://www.ch-werner.de/sqliteodbc/sqliteodbc-0.80.tar.gz
bbdb <- odbcConnect("bbdb")
libary(nutshell)
library(nutshell)
install.packages("nutshell")
library(nutshell)
data(toxins.and.cancer)
attach(toxins.and.cancer)
plot(total_toxic_chemicals/Surface/Area,deaths_lung/Population)
plot(total_toxic_chemicals/Surface_Area,deaths_lung/Population)
library(kernlab)
data(spam)
dim(spam)
set.seed(3435)
trainIndicator = rbinom(4601,size=1,prob=0.5)
table(trainIndicator)
trainSpam = spam[trainIndicator==1,]
testSpam = spam[trainIndicator==0,]
dim(trainSpam)
names(trainSpam)
table(trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$tpe)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam[,1:4]+1))
hCluster = hclust(dist(t(trainSpam[,1:57])))
plot(hClusterUpdated)
hClusterUpdated = hclust(dist(t(log10(trainSpam[,1:55]))))
hClusterUpdated = hclust(dist(t(log10(trainSpam[,1:55]+1))))
plot(hClusterUpdated)
trainSpam$numType = as.numeric(trainSpam$type)-1
costFunction = function(x,y){sum(x!=(y>0.5))}
cvError = rep(NA,55)
library(boot)
for (i in 1:55){}
for (i in 1:55){
lmFormula = as.formula(paste("numType~",names(trainSpam){i},sep=""))
for (i in 1:55){
lmFormula = as.formula(paste("numType~",names(trainSpam){i},sep=""))
for (i in 1:55){
lmFormula = as.formula(paste("numType~",names(trainSpam){i},sep=""))
load("/Users/williamshelton/Downloads/ravensData.rda")
head(ravensData)
lmRavens <- ravensData$ravenWinNum ~ ravensData$ravenScore)
lmRavens <- lm(ravensData$ravenWinNum ~ ravensData$ravenScore)
summary(lmRavens)
plot(ravensData$ravenScore, lmRavens$fitted,pch=19,col="blue",ylab="Prob Win",xlab="Raven Score")
logRegRavens <- glm(ravensData$ravenWinNum ~ ravensData$ravenScore,family="binomial")
summary(logRegRavens)
exp(logRegRavens$coeff)
exp(confint(logRegRavens))
anova(logRegRavens,test="Chisq")
set.seed(3433); par(mfrow=c(1,2))
poisData2 <- rpois(100,lambda=100); poisData1 <- rpois(100,lambda=50)
hist(poisData1,col="blus",xlim=c(0,150)); hist(poisData2,col="blue",xlim=c(0,150))
hist(poisData1,col="blue",xlim=c(0,150)); hist(poisData2,col="blue",xlim=c(0,150))
set.seed(343); x <- seq(0,3,length=100); y <- rcauchy(100);
lm1 <- lm(y ~ x); rlm1 <- rlm(y~x)
library(rlm)
data(waprbreaks)
rattle()
library(rattle)
install.packages(rattle)
install.packages(rattle, dependencies = c("Depends", "Suggests"))
setwd("/Users/williamshelton/Desktop/PIXLEE_predictive_modeling")
ls
ls()
getwd(0)
getwd()
library(rattle)
rattle()
rattle()
